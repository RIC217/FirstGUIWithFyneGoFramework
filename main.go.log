//go:build linux || darwin || windows
// +build linux darwin windows

package main

import (
	"fmt"
	"os"

	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/app"
	"fyne.io/fyne/v2/dialog"
	"fyne.io/fyne/v2/widget"
)

var filePath string = ""
var fileContent string
var textGridFromString *widget.Entry
var nonSavedSymbol = "\u2B24"
var titleOfWindow = "Hello World"

func main() {
	// fmt.Println(nonSavedSymbol)
	a := app.New()
	w := a.NewWindow(titleOfWindow)
	w.Resize(fyne.NewSize(720, 480))

	// top := canvas.NewText("Titre de la page", color.White)
	// top.Alignment = fyne.TextAlignCenter
	// top := widget.NewLabel("Titre de la page")
	// layout_1 := layout.NewBorderLayout(top, top, top, top)
	// layout1 := container.New(layout_1, widget.NewLabel("slt"))

	// layout := container.New(layout.NewGridLayoutWithRows(2), top)

	newFileMenuItem := fyne.NewMenuItem("Ouvrir un fichier", func() {
		// fmt.Println("ceci est un test")
		openFile := dialog.NewFileOpen(func(f fyne.URIReadCloser, err error) {
			if err == nil && f != nil {
				fpath := f.URI().Path()
				fmt.Printf("[LOG] En train d'ouvrir %s...\n", fpath)
				// file, ferr := os.Open(fpath)
				// if ferr != nil {
				// 	dialog.NewError(errors.New("Erreur lors de l'ouverture de "+fpath+" !"), w)
				// }
				// scanner := bufio.NewScanner(file)
				// var fileContentTemp []byte
				// for scanner.Scan() {
				// 	line := scanner.Bytes()
				// 	for _, v := range line {
				// 		fileContentTemp = append(fileContentTemp, v)
				// 	}
				// }

				fileContentTemp, rerr := os.ReadFile(fpath)
				defer f.Close()
				if rerr != nil {
					dialog.NewError(rerr, w)
				}
				filePath = f.URI().Path()
				fileContent = string(fileContentTemp)
				textGridFromString.SetText(fileContent)
				textGridFromString.Enable()
				titleOfWindow = f.URI().Name()
				w.SetTitle(nonSavedSymbol + " " + titleOfWindow)
			}
		}, w)
		openFile.Show()
	})
	menu := fyne.NewMenu("Fichier", newFileMenuItem)

	w.SetMainMenu(fyne.NewMainMenu(menu))

	textGridFromString = widget.NewMultiLineEntry()
	textGridFromString.SetPlaceHolder("Le contenu de ton fichier")
	textGridFromString.Disable()

	// w.SetContent(layout)
	// w.SetContent(top)
	w.SetContent(textGridFromString)

	w.ShowAndRun()
}
